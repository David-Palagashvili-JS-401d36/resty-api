{"version":3,"sources":["header.js","form.js","footer.js","app.js","index.js"],"names":["Header","id","React","Component","Form","props","state","method","value","handleChange","bind","handleSubmit","event","this","setState","target","console","log","preventDefault","onSubmit","type","placeHolder","name","onChange","className","onClick","Footer","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wSAgBeA,E,uKARP,OACI,6BAASC,GAAG,UACR,8C,GARKC,IAAMC,W,OCwCZC,E,kDAvCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,OAAQ,GACRC,MAAO,IAEX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,yDAUNE,GACTC,KAAKC,SAAU,CAACN,MAAOI,EAAMG,OAAOP,U,mCAG3BI,GACTI,QAAQC,IAAI,wBAAyBJ,KAAKP,MAAME,OAChDI,EAAMM,mB,+BAGA,IAAD,OACL,OACI,6BAASjB,GAAG,QACR,0BAAMkB,SAAUN,KAAKF,cACjB,uCACA,2BAAOS,KAAK,OAAOnB,GAAG,MAAMoB,YAAY,MAAMC,KAAK,MAAMC,SAAUV,KAAKJ,eACxE,2BAAOe,UAAY,SAAShB,MAAO,QACnC,2BAAOgB,UAAU,SAASJ,KAAK,SAASZ,MAAM,MAAMiB,QAAS,kBAAM,EAAKX,SAAU,CAACP,OAAQ,WAC3F,2BAAOiB,UAAU,SAASJ,KAAK,SAASZ,MAAM,OAAOiB,QAAS,kBAAM,EAAKX,SAAU,CAACP,OAAQ,YAC5F,2BAAOiB,UAAU,SAASJ,KAAK,SAASZ,MAAM,MAAMiB,QAAS,kBAAM,EAAKX,SAAU,CAACP,OAAQ,WAC3F,2BAAOiB,UAAU,SAASJ,KAAK,SAASZ,MAAM,SAASiB,QAAS,kBAAM,EAAKX,SAAU,CAACP,OAAQ,eAElG,iCACI,uBAAGiB,UAAU,UAAUX,KAAKP,MAAMC,OAAlC,IAA2CM,KAAKP,MAAME,a,GAjCvDN,IAAMC,WCgBVuB,E,uKARP,OACI,6BAASzB,GAAG,UACR,yD,GAVKC,IAAMC,WCoCZwB,G,0EA1BX,aAAe,IAAD,8BACV,gBAEKrB,MAAQ,GAHH,E,qDAYV,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAjBEJ,IAAMC,YCLlByB,EAAcC,SAASC,eAAe,QAE5CC,IAASC,OAAO,kBAAC,EAAD,MAAQJ,K","file":"static/js/main.80ed46f0.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <section id=\"header\">\n                <h1>RESTy API</h1>\n            </section>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { // state only for the form\n            method: '',\n            value: '',\n        }; // handlers invoked with the state, must be bound to the component\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    // separating the onChange handler allows us to be more dynamic with JSX\n    handleChange(event) {\n        this.setState( {value: event.target.value} );\n    }\n    // having the submit handler as a dedicated method reduces possible interference from preventDefault.\n    handleSubmit(event) {\n        console.log('URL submitted to form', this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <section id=\"form\">\n                <form onSubmit={this.handleSubmit}>\n                    <label>URL:</label>\n                    <input type=\"text\" id=\"url\" placeHolder=\"URL\" name=\"URL\" onChange={this.handleChange}></input>\n                    <input className = \"submit\" value= \"GO!\"></input>\n                    <input className=\"button\" type=\"button\" value=\"GET\" onClick={() => this.setState( {method: 'GET'} )}></input>\n                    <input className=\"button\" type=\"button\" value=\"POST\" onClick={() => this.setState( {method: 'POST'} )}></input>\n                    <input className=\"button\" type=\"button\" value=\"PUT\" onClick={() => this.setState( {method: 'PUT'} )}></input>\n                    <input className=\"button\" type=\"button\" value=\"DELETE\" onClick={() => this.setState( {method: 'DELETE'} )}></input>\n                </form>\n                <section>\n                    <p className=\"update\">{this.state.method} {this.state.value}</p>\n                </section>\n            </section>\n        );\n    }\n}\n\nexport default Form;","import React from 'react';\n\nclass Footer extends React.Component {\n    // constructor() {\n    //     super();\n    //     // Each component has it's own state\n    //     this.state = {};\n    // }\n\n    render() {\n        return (\n            <section id=\"footer\">\n                <p>&copy; CodeFellows 2020</p>\n            </section>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './header.js';\nimport Form from './form.js';\nimport Footer from './footer.js';\n// all sass designs are loaded to and ran from the App compenent\nimport './styles/app.scss';\nimport './styles/header.scss';\nimport './styles/form.scss';\nimport './styles/footer.scss';\n\n// this component behaves similarly to our hub in CAPS, it sort of manages/hosts the rest of our components\nclass App extends React.Component {\n    constructor() {\n        super();\n        // Each component has it's own state\n        this.state = {};\n        // we must bind methods (not defined with fat arrow functions to the React.Components \"this\")\n        // this.handleStateWords = this.handleStateWords.bind(this);\n    }\n    // handleStateWords(words) {\n    //     this.setState( {words} );\n    // }\n    render() {\n        // react components appear here, must be returned as JSX\n        return (\n            <div>\n                <Header/>\n                <Form/>\n                <Footer/>\n            </div>\n        );\n    }\n}\n// module.exports = App\n// vs.\n// module.exports = {\n//   App\n// }\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import the central component which sets the root or base of our React App\nimport App from './app.js';\n\n// attach the component to the DOM\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(<App/>, rootElement);"],"sourceRoot":""}