{"version":3,"sources":["header.js","form.js","footer.js","app.js","index.js"],"names":["Header","id","React","Component","Form","props","state","method","display","url","handleChange","bind","handleSelection","handleSubmit","event","this","setState","target","value","preventDefault","console","log","fetch","formData","json","jsonData","count","result","handler","onSubmit","type","placeHolder","name","onChange","className","onClick","Footer","App","handleFormActions","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2SAgBeA,E,uKARP,OACI,6BAASC,GAAG,UACR,8C,GARKC,IAAMC,W,8BCqDZC,E,kDApDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,OAAQ,MACRC,QAAS,GACTC,IAAK,IAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBATL,E,yDAYLG,GACVC,KAAKC,SAAU,CAACP,IAAKK,EAAMG,OAAOC,U,sCAGrBJ,GACbC,KAAKC,SAAU,CAACT,OAAQO,EAAMG,OAAOC,QACrCJ,EAAMK,mB,4EAISL,G,oFACfM,QAAQC,IAAI,wBAAyBN,KAAKT,MAAMG,KAChDK,EAAMK,iB,SAEeG,MAAMP,KAAKT,MAAMG,K,cAAlCc,E,gBACiBA,EAASC,O,OAA1BC,E,OAEAC,EAAQD,EAASC,MACjBC,EAASF,EAASE,OAEtBZ,KAAKV,MAAMuB,QAAQF,EAAOC,G,uIAGpB,IAAD,OACL,OACI,6BAAS1B,GAAG,QACR,0BAAM4B,SAAUd,KAAKF,cACjB,yCACA,2BAAOiB,KAAK,OAAO7B,GAAG,MAAM8B,YAAY,MAAMC,KAAK,MAAMC,SAAUlB,KAAKL,eACxE,2BAAOwB,UAAY,SAAShB,MAAO,QACnC,2BAAOgB,UAAU,SAASJ,KAAK,SAASZ,MAAM,MAAMiB,QAAS,kBAAM,EAAKnB,SAAU,CAACT,OAAQ,WAC3F,2BAAO2B,UAAU,SAASJ,KAAK,SAASZ,MAAM,OAAOiB,QAAS,kBAAM,EAAKnB,SAAU,CAACT,OAAQ,YAC5F,2BAAO2B,UAAU,SAASJ,KAAK,SAASZ,MAAM,MAAMiB,QAAS,kBAAM,EAAKnB,SAAU,CAACT,OAAQ,WAC3F,2BAAO2B,UAAU,SAASJ,KAAK,SAASZ,MAAM,SAASiB,QAAS,kBAAM,EAAKnB,SAAU,CAACT,OAAQ,oB,GA9C/FL,IAAMC,WCWViC,E,uKARP,OACI,6BAASnC,GAAG,UACR,gE,GALKC,IAAMC,WCkCZkC,G,0EAxBX,aAAe,IAAD,8BACV,gBAOJC,kBAAoB,SAACZ,EAAOC,GACxB,EAAKX,SAAU,CAACU,QAAOC,YAPvB,EAAKrB,MAAQ,CACToB,MAAO,EACPC,OAAQ,IAJF,E,qDAcV,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMC,QAAWb,KAAKuB,oBACtB,kBAAC,EAAD,W,GAnBEpC,IAAMC,YCLlBoC,EAAcC,SAASC,eAAe,QAE5CC,IAASC,OAAO,kBAAC,EAAD,MAAQJ,K","file":"static/js/main.b3533b35.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <section id=\"header\">\n                <h1>RESTy API</h1>\n            </section>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { // state only for the form\n            method: 'GET', // get is set as the default REST method\n            display: '',\n            url: '',\n        }; // handlers invoked with the state, must be bound to the component (not defined with fat arrow functions)\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    // separating the onChange handler allows us to be more dynamic with JSX\n    handleChange (event) {\n        this.setState( {url: event.target.value} );\n    }\n    // Expects a function to be sent to it as a prop\n    handleSelection (event) {\n        this.setState( {method: event.target.value} );\n        event.preventDefault();\n    }\n\n    // switching to async function for onSubmit promises\n    async handleSubmit(event) {\n        console.log('URL submitted to form', this.state.url);\n        event.preventDefault();\n\n        let formData = await fetch(this.state.url);\n        let jsonData = await formData.json();\n        // Send the API results back to App.js using the method sent down in props\n        let count = jsonData.count;\n        let result = jsonData.result;\n\n        this.props.handler(count, result);\n    }\n    // Renders a URL entry form with a selection of REST methods to choose from.\n    render() {\n        return (\n            <section id=\"form\">\n                <form onSubmit={this.handleSubmit}>\n                    <label> URL: </label>\n                    <input type=\"text\" id=\"URL\" placeHolder=\"URL\" name=\"URL\" onChange={this.handleChange}></input>\n                    <input className = \"submit\" value= \"GO!\"></input>\n                    <input className=\"button\" type=\"button\" value=\"GET\" onClick={() => this.setState( {method: 'GET'} )}></input>\n                    <input className=\"button\" type=\"button\" value=\"POST\" onClick={() => this.setState( {method: 'POST'} )}></input>\n                    <input className=\"button\" type=\"button\" value=\"PUT\" onClick={() => this.setState( {method: 'PUT'} )}></input>\n                    <input className=\"button\" type=\"button\" value=\"DELETE\" onClick={() => this.setState( {method: 'DELETE'} )}></input>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default Form;","import React from 'react';\n\nclass Footer extends React.Component {\n\n    render() {\n        return (\n            <section id=\"footer\">\n                <p>&copy; 2020 David Palagashvili</p>\n            </section>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './header.js';\nimport Form from './form.js';\nimport Footer from './footer.js';\n// all sass designs are loaded to and ran from the App compenent\nimport './styles/app.scss';\nimport './styles/header.scss';\nimport './styles/form.scss';\nimport './styles/footer.scss';\n\n// this component behaves similarly to our hub in CAPS, it sort of manages/hosts the rest of our components\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = { // Holds state: Count and Results Array\n            count: 0,\n            result: []\n        }\n    }\n    // A class method that can update state (getting a linter error ln 21 at the = operator...)\n    handleFormActions = (count, result) => {\n        this.setState( {count, result} )\n    }\n\n    render() {\n        // TODO: Renders 2 Child Components\n        return (\n            <div>\n                <Header/>\n                <Form handler = {this.handleFormActions}/>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import the central component which sets the root or base of our React App\nimport App from './app.js';\n\n// attach the component to the DOM\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(<App/>, rootElement);"],"sourceRoot":""}